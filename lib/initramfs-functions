#!/bin/sh
# shellcheck disable=SC2039

#############################################################################
##
##  initramfs-functions
##
##  Copyright 2022 Dermot Bradley <dermot_bradley@yahoo.com>
##
##  Licensed via GPL version 2.0
##
#############################################################################


#
# Passed a path relative to /lib/modules/<version>/ for a module,
# returns the module's name. Caters for where module name is
# different than module filename.
#
module_name() {
  local _path=$1

  local _name

  _name="${_path##*/}"
  _name="${_name%%.ko*}"

  case $_name in
    tiny-power-button )
      echo "tiny_power_button" ;;
    * )
      echo "$_name" ;;
  esac
}


#
# Show contents of generated initramfs
#
show_initramfs_contents() {
  if [ -n "$debug_enabled" ]; then
    cat <<-'EOF' >> "$run_script"
	
	# Debug
	{
	EOF

    _initramfs_filename="$(get_initramfs_filename)"

    case $image_initramfs_tool in
      booster )
        cat <<-EOF >> "$run_script"
	  write_debug_log "booster $_initramfs_filename contents:"
	  booster ls "/boot/$_initramfs_filename" >> /chroot.log 2>&1
	EOF
        ;;
      dracut )
        cat <<-'EOF' >> "$run_script"
	  write_debug_log "dracut ??? contents:"
	  ###mkinitfs -l "\$_kernel_version" >> /chroot.log 2>&1
	EOF
        ;;
      mkinitfs )
        cat <<-EOF >> "$run_script"
	  write_debug_log "mkinitfs contents:"
	  zcat /boot/$_initramfs_filename | cpio -t >> /chroot.log 2>/dev/null
	EOF
        ;;
      * )
        : ;;
    esac

    cat <<-'EOF' >> "$run_script"
	}
	EOF
  fi
}
