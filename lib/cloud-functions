#!/bin/sh
# shellcheck disable=SC2039

#############################################################################
##
##  cloud-functions
##
##  Copyright 2021-2023 Dermot Bradley <dermot_bradley@yahoo.com>
##
##  Licensed via GPL version 2.0
##
#############################################################################


#
# Define generic packages regardless of whether cloud-init, tiny-cloud, or
# neither is in use. This includes specific Cloud Provider CLI packages.
#
define_cloud_machine_packages() {
  local _cloud_pkgs_list

  case $image_cloud_software in
    cloud-init )
      _cloud_pkgs_list="$(define_cloud_init_machine_packages)" ;;
    none )
      _cloud_pkgs_list="$(define_non_cloud_init_machine_packages)" ;;
    tiny-cloud )
      _cloud_pkgs_list="$(define_tiny_cloud_machine_packages)" ;;
  esac

  if [ -z "$image_barebones" ]; then
    _cloud_pkgs_list="$cloud_pkgs_list${_cloud_pkgs_list:+ }virt-what"

    if [ -z "$image_disable_cloud_provider_cli" ]; then
      # Install any cloud provider CLI packages
      _cloud_pkgs_list="${_cloud_pkgs_list}$(define_cloud_provider_cli_packages)"
    fi
  fi

  echo "$_cloud_pkgs_list"
}


#
# Define Cloud Provider specific CLI packages.
#
#
define_cloud_provider_cli_packages() {
  local _cli_pkgs_list=""

  if [ -n "$cloud_cli_packages" ]; then
    _cli_pkgs_list="$cloud_cli_packages"
  fi

  if [ -n "$_cli_pkgs_list" ]; then
    echo " $_cli_pkgs_list"
  fi
}


#
# Disable unrequired kernel drivers modules on a cloud machine
#
disable_kernel_drivers_modules_on_cloud() {
  local _disable_list=""

  # Disable all VM modules
  _disable_list="$_disable_list vmwgfx $CADI_VIRTUAL_KERNEL_MODULES"

  # Disable all physical modules
  _disable_list="$_disable_list $CADI_PHYSICAL_KERNEL_MODULES"
  _disable_list="$_disable_list ehci-platform ohci-platform xhci-plat-hcd"

  if [ "$image_cloud_type" != "generic" ]; then
    # Not generic
    case $image_cloud_type in
      aws )
        : ;;
      * )
        _disable_list="$_disable_list $CADI_CLOUD_AWS_KERNEL_MODULES" ;;
    esac
    case $image_cloud_type in
      azure )
        : ;;
      * )
        _disable_list="$_disable_list $CADI_CLOUD_AZURE_KERNEL_MODULES"
        _disable_list="$_disable_list $CADI_AZURE_HYPERV_COMMON_KERNEL_MODULES"
        _disable_list="$_disable_list $CADI_VIRTUAL_HYPERV_KERNEL_MODULES"
        _disable_list="$_disable_list vmwgfx $CADI_VIRTUAL_VMWARE_KERNEL_MODULES"
        ;;
    esac
    case $image_cloud_type in
      google )
        : ;;
      * )
        _disable_list="$_disable_list $CADI_CLOUD_GOOGLE_KERNEL_MODULES" ;;
    esac
  fi

  if [ -z "$image_enable_graphics" ] || \
     [ "$image_console_type" = "hypervisor" ] || \
     [ "$image_console_type" = "serial" ]; then
    # Disable all KMS/DRM modules
    _disable_list="$_disable_list $CADI_PHYSICAL_GENERAL_KMS_MODULES"
    case $image_arch in
      aarch64 | armv7 )
        _disable_list="$_disable_list $CADI_PHYSICAL_ARM_KMS_MODULES" ;;
      x86 | x86_64 )
        _disable_list="$_disable_list $CADI_PHYSICAL_X86_KMS_MODULES" ;;
    esac
  fi

  echo "$_disable_list"
}
